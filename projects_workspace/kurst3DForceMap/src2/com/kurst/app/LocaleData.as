/********************************************************************************************************************************************************************************
 * 
 * Class Name  	: 
 * Version 	  	: 
 * Description 	: 
 * 
 ********************************************************************************************************************************************************************************
 * 
 * Author 		: Karim Beyrouti
 * Date 			: 
 * 
 ********************************************************************************************************************************************************************************
 * 
 * METHODS
 * 
 *
 * PROPERTIES
 * 
 *
 * EVENTS
 * 
 * 
 ********************************************************************************************************************************************************************************
 * 				:
 *
 *
 *********************************************************************************************************************************************************************************
 * NOTES			:
 **********************************************************************************************************************************************************************************/
package com.kurst.app {
	import com.kurst.events.LoadEvent;
	import com.kurst.events.eventDispatcher;
	import com.kurst.loading.XmlLoader;
	import com.kurst.utils.StrUtils;

	public class LocaleData extends eventDispatcher {
		
		// ------------------------------------------------------------------------------------------------------------------------------------------------------------
		
		private static var _inst : LocaleData;

		// ------------------------------------------------------------------------------------------------------------------------------------------------------------
		
		/**
		 *  
		 * 
		 * @param
		 * @return
		 */
		public static function load(uri : String) : LocaleData {
			getInstance()._loadResource(uri);
			return getInstance();
		}
		/**
		 *  
		 * 
		 * @param
		 * @return
		 */
		public static function getResource(key : String) : * {
			return getInstance()._getResource(key);
		}
		/**
		 *  
		 * 
		 * @param
		 * @return
		 */
		public static function addResource(value : *, key : String) : void {
			getInstance()._addResource(value, key);
		}
		/**
		 *  
		 * 
		 * @param
		 * @return
		 */
		public static function enumerate(traceFlag : Boolean = false) : void {
		}
		/**
		 *  
		 * 
		 * @param
		 * @return
		 */
		public static function getInstance() : LocaleData {
			if ( _inst == null )
				_inst = new LocaleData();
			return _inst;
		}

		// ------------------------------------------------------------------------------------------------------------------------------------------------------------
		// ------------------------------------------------------------------------------------------------------------------------------------------------------------
		
		private var _xmlLoader : XmlLoader;
		private var _data : Object;

		// ------------------------------------------------------------------------------------------------------------------------------------------------------------

		public function LocaleData() {
			
			_data = new Object();

			_xmlLoader = new XmlLoader();
			_xmlLoader.addEventListener(LoadEvent.LOADED_XML, OnXmlLoaded, false, 0, true);
			
		}

		// ------------------------------------------------------------------------------------------------------------------------------------------------------------
		// -PUBLIC-----------------------------------------------------------------------------------------------------------------------------------------------------
		// ------------------------------------------------------------------------------------------------------------------------------------------------------------

		/**
		 *  
		 * 
		 * @param
		 * @return
		 */
		public function _loadResource(uri : String) : void {
			_xmlLoader.load(uri);
		}
		/**
		 *  
		 * 
		 * @param
		 * @return
		 */
		public function _getResource(key : String) : * {
			return _data[key];
		}
		/**
		 *  
		 * 
		 * @param
		 * @return
		 */
		public function _addResource(value : *, key : String) : void {
			_data[key] = value;
		}
		/**
		 *  
		 * 
		 * @param
		 * @return
		 */
		public function _enumerate(traceFlag : Boolean = false) : void {
		}

		// ------------------------------------------------------------------------------------------------------------------------------------------------------------
		// -PRIVATE----------------------------------------------------------------------------------------------------------------------------------------------------
		// ------------------------------------------------------------------------------------------------------------------------------------------------------------
		
		/**
		 *  
		 * 
		 * @param
		 * @return
		 */
		private function parseXml(xml : XML) : void {
			var nodes : XMLList = xml.*;

			for each (var node:XML in nodes) {
				if ( node.attribute("type") != undefined ) {
					_data[ node.localName() ] = StrUtils.convertString(node.toString(), node.attribute("type"))
				} else {
					_data[ node.localName() ] = node.toString();
				}
			}
		}

		// ------------------------------------------------------------------------------------------------------------------------------------------------------------
		// -GET/SET----------------------------------------------------------------------------------------------------------------------------------------------------
		// ------------------------------------------------------------------------------------------------------------------------------------------------------------
		// ------------------------------------------------------------------------------------------------------------------------------------------------------------
		// -EVENT HANDLERS-------------------------------------------------------------------------------------------------------------------------------------------
		// ------------------------------------------------------------------------------------------------------------------------------------------------------------
		
		private function OnXmlLoaded(event : LoadEvent) : void {
			parseXml(_xmlLoader.data);
			dispatchEvent(new LoadEvent(LoadEvent.LOADED_LOCALE, false));
			_xmlLoader.clean();
		}
	
	}
}