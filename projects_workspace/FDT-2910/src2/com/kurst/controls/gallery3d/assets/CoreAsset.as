/******************************************************************************************************************************************************************************** *  * Class Name  	: com.kurst.controls.gallery3d.assets.CoreAsset * Version 	  	: 1 * Description 	: Display images. This class is used as a MovieMaterial in papervision and is the base material class * 					for the GalleryController3D component. It contains functions and properties for  * 					other classes that extend it.  *  ******************************************************************************************************************************************************************************** *  * Author 		: Karim Beyrouti * Date 			: 10/09/09 *  ******************************************************************************************************************************************************************************** *  * METHODS *  *	addSWF( s : MovieClip ) *	addImage( bm : Bitmap ) *	destroy() *	 *	unSelect() *	select() *	draw() * * PROPERTIES *  *	plane() : PlaneX *	stream() : NetStream *	connection() : NetConnection *	video() : Video *	data() : Object *	isSelected() : Boolean *	movieMaterial() : MovieMaterial *	thumbQuality() : Number *	bitmap() : Bitmap *	videoEnabled() : Boolean *	videoURI() : String *	swfFlag() : Boolean *	swf() : MovieClip *	styleSheet() : StyleSheet *	background() : MovieClip *	useThumbnail() : Boolean *	imageDataBinding() : String *	thmbnlDataBinding() : String *  * EVENTS *  * 	Functions / Event Hooks *		onSetStyleSheet () *		onSetData () *		onSetContent () *		selectedAnimationComplete () *		MouseRollOver() *		MouseRollOut() *		MouseDown() *		MouseUpEvent() *  *  ******************************************************************************************************************************************************************************** * 				: * * ********************************************************************************************************************************************************************************* * NOTES			: **********************************************************************************************************************************************************************************/package com.kurst.controls.gallery3d.assets {	import com.kurst.pv3d.objects.PlaneX;	import flash.display.Bitmap;	import flash.display.MovieClip;	import flash.events.MouseEvent;	import flash.media.Video;	import flash.net.NetConnection;	import flash.net.NetStream;	import flash.text.StyleSheet;	import org.papervision3d.materials.MovieMaterial;	public class CoreAsset extends MovieClip implements ICoreAsset {		// ------------------------------------------------------------------------------------------------------------------------------------------------------------		private var _data : Object;		private var _bitmap : Bitmap;		private var _imageDataBinding : String = 'uri';		private var _thmbnlDataBinding : String = 'thumb';		private var _useThumbnail : Boolean = false;		private var _movieMaterial : MovieMaterial;		private var _isSelected : Boolean = false;		private var _video : Boolean = false;		private var _lowResScalar : Number;		private var _videoURI : String;		private var _swfFlag : Boolean		private var _swf : MovieClip;		private var _styleSheet : StyleSheet		private var _stream : NetStream;		private var _connection : NetConnection;		private var _vid : Video;		private var _background : MovieClip;		private var _plane : PlaneX;		// ------------------------------------------------------------------------------------------------------------------------------------------------------------		public function CoreAsset() {			_background = new MovieClip();			addChild(_background);		}		// -PUBLIC-----------------------------------------------------------------------------------------------------------------------------------------------------		// ------------------------------------------------------------------------------------------------------------------------------------------------------------		//		// PPPPPP  UU   UU BBBBBB  LL      IIIIII  CCCCC		// PP   PP UU   UU BB   BB LL        II   CC   CC		// PPPPPP  UU   UU BBBBBB  LL        II   CC		// PP      UU   UU BB   BB LL        II   CC   CC		// PP       UUUUU  BBBBBB  LLLLLLL IIIIII  CCCCC		//		// ------------------------------------------------------------------------------------------------------------------------------------------------------------		// ------------------------------------------------------------------------------------------------------------------------------------------------------------		/**		 * @method 		 * @tooltip		 * @param		 * @return		 */		public function addSWF(s : MovieClip) : void {			_swfFlag = true;			_swf = s;			addChild(_swf);			onSetContent();		}		/**		 * @method 		 * @tooltip		 * @param		 * @return		 */		public function addImage(bm : Bitmap) : void {			_bitmap = bm;			addChild(_bitmap);			onSetContent();		}		/**		 * @method 		 * @tooltip		 * @param		 * @return		 */		public function destroy() : void {			if ( _bitmap != null ) {				removeChild(_bitmap);				_bitmap.bitmapData.dispose();			}			_bitmap = null;			_isSelected = undefined;			_data = null;			_movieMaterial = null;		}		/**		 * @method 		 * @tooltip		 * @param		 * @return		 */		public function unSelect() : void {			isSelected = false;		}		/**		 * @method 		 * @tooltip		 * @param		 * @return		 */		public function select() : void {			// trace('select: ' + data.title )			isSelected = true;		}		/**		 * @method 		 * @tooltip		 * @param		 * @return		 */		public function selectedAnimationComplete() : void {		}		/**		 * @method 		 * @tooltip		 * @param		 * @return		 */		public function draw() : void {			try {				movieMaterial.updateBitmap();				movieMaterial.drawBitmap()			} catch ( e : Error ) {			}		}		// ------------------------------------------------------------------------------------------------------------------------------------------------------------		/**		 * @method onSetStyleSheet		 * @tooltip  called after the stylesheet is added to the material		 */		public function onSetStyleSheet() : void { /** MARKED FOR OVERRIDE **/		}		/**		 * @method onSetData		 * @tooltip called after the DATA is added to the material		 */		public function onSetData() : void {/** MARKED FOR OVERRIDE **/		}		/**		 * @method onSetContent		 * @tooltip called after the content / image / swf is added to the material		 */		public function onSetContent() : void {/** MARKED FOR OVERRIDE **/		}		// -GET/SET----------------------------------------------------------------------------------------------------------------------------------------------------		// ------------------------------------------------------------------------------------------------------------------------------------------------------------		//		// GGGGG  EEEEEEE TTTTTT          SSSSS EEEEEEE TTTTTT		// GG      EE        TT           SS     EE        TT		// GG  GGG EEEE      TT            SSSS  EEEE      TT		// GG   GG EE        TT               SS EE        TT		// GGGGG  EEEEEEE   TT           SSSSS  EEEEEEE   TT		//		// ------------------------------------------------------------------------------------------------------------------------------------------------------------		// ------------------------------------------------------------------------------------------------------------------------------------------------------------		/**		 * @method 		 * @tooltip		 * @param		 * @return		 */		public function get plane() : PlaneX {			return _plane;		}		public function set plane(plane : PlaneX) : void {			_plane = plane;		}		/**		 * @method 		 * @tooltip		 * @param		 * @return		 */		public function get stream() : NetStream {			return _stream;		}		public function set stream(stream : NetStream) : void {			_stream = stream;		}		/**		 * @method 		 * @tooltip		 * @param		 * @return		 */		public function get connection() : NetConnection {			return _connection;		}		public function set connection(connection : NetConnection) : void {			_connection = connection;		}		/**		 * @method 		 * @tooltip		 * @param		 * @return		 */		public function get video() : Video {			return _vid;		}		public function set video(v : Video) : void {			_vid = v;		}		/**		 * @method 		 * @tooltip		 * @param		 * @return		 */		public function get data() : Object {			return _data;		}		public function set data(data : Object) : void {			_data = data;			if ( data != null ) {				videoEnabled = ( _data.video != '' );				videoURI = _data.video;				onSetData();			}		}		/**		 * @method 		 * @tooltip		 * @param		 * @return		 */		public function get isSelected() : Boolean {			return _isSelected;		}		public function set isSelected(isSelected : Boolean) : void {			_isSelected = isSelected;		}		/**		 * @method 		 * @tooltip		 * @param		 * @return		 */		public function get movieMaterial() : MovieMaterial {			return _movieMaterial;		}		public function set movieMaterial(movieMaterial : MovieMaterial) : void {			_movieMaterial = movieMaterial;		}		/**		 * @method 		 * @tooltip		 * @param		 * @return		 */		public function get thumbQuality() : Number {			return _lowResScalar;		}		public function set thumbQuality(lrs : Number) : void {			_lowResScalar = lrs		};		/**		 * @method 		 * @tooltip		 * @param		 * @return		 */		public function get bitmap() : Bitmap {			return _bitmap;		}		/**		 * @method 		 * @tooltip		 * @param		 * @return		 */		public function get videoEnabled() : Boolean {			return _video;		}		public function set videoEnabled(videoFlag : Boolean) : void {			_video = videoFlag;		}		/**		 * @method 		 * @tooltip		 * @param		 * @return		 */		public function get videoURI() : String {			return _videoURI;		}		public function set videoURI(videoFlag : String) : void {			_videoURI = videoFlag;		}		/**		 * @method 		 * @tooltip		 * @param		 * @return		 */		public function get swfFlag() : Boolean {			return _swfFlag;		}		public function set swfFlag(swfFlag : Boolean) : void {			_swfFlag = swfFlag;		}		/**		 * @method 		 * @tooltip		 * @param		 * @return		 */		public function get swf() : MovieClip {			return _swf;		}		public function set swf(swf : MovieClip) : void {			_swf = swf;		}		/**		 * @method 		 * @tooltip		 * @param		 * @return		 */		public function get styleSheet() : StyleSheet {			return _styleSheet;		}		public function set styleSheet(styleSheet : StyleSheet) : void {			_styleSheet = styleSheet;			onSetStyleSheet();		}		/**		 * @method 		 * @tooltip		 * @param		 * @return		 */		public function get background() : MovieClip {			return _background;		}		public function set background(background : MovieClip) : void {			_background = background;		}		/**		 * @method 		 * @tooltip		 * @param		 * @return		 */		public function get useThumbnail() : Boolean {			return _useThumbnail;		}		public function set useThumbnail(useThumbnail : Boolean) : void {			_useThumbnail = useThumbnail;		}		/**		 * @method 		 * @tooltip		 * @param		 * @return		 */		public function get imageDataBinding() : String {			return _imageDataBinding;		}		public function set imageDataBinding(imageDataBinding : String) : void {			_imageDataBinding = imageDataBinding;		}		/**		 * @method 		 * @tooltip		 * @param		 * @return		 */		public function get thmbnlDataBinding() : String {			return _thmbnlDataBinding;		}		public function set thmbnlDataBinding(thmbnlDataBinding : String) : void {			_thmbnlDataBinding = thmbnlDataBinding;		}		// -EVENT HANDLERS-------------------------------------------------------------------------------------------------------------------------------------------		// ------------------------------------------------------------------------------------------------------------------------------------------------------------		//		// EEEEEEE V     V EEEEEEE NN  NN TTTTTT         HH   HH   AAA   NN  NN DDDDDD  LL      EEEEEEE RRRRR    SSSSS		// EE      V     V EE      NNN NN   TT           HH   HH  AAAAA  NNN NN DD   DD LL      EE      RR  RR  SS		// EEEE     V   V  EEEE    NNNNNN   TT           HHHHHHH AA   AA NNNNNN DD   DD LL      EEEE    RRRRR    SSSS		// EE        V V   EE      NN NNN   TT           HH   HH AAAAAAA NN NNN DD   DD LL      EE      RR  RR      SS		// EEEEEEE    V    EEEEEEE NN  NN   TT           HH   HH AA   AA NN  NN DDDDDD  LLLLLLL EEEEEEE RR   RR SSSSS		//		// ------------------------------------------------------------------------------------------------------------------------------------------------------------		// ------------------------------------------------------------------------------------------------------------------------------------------------------------		/**		 * @method 		 * @tooltip		 * @param		 * @return		 */		public function MouseRollOver() : void {		}		/**		 * @method 		 * @tooltip		 * @param		 * @return		 */		public function MouseRollOut() : void {		}		/**		 * @method 		 * @tooltip		 * @param		 * @return		 */		public function MouseDown(e : MouseEvent = null) : void {		}		/**		 * @method 		 * @tooltip		 * @param		 * @return		 */		public function MouseUpEvent(e : MouseEvent = null) : void {		}	}}