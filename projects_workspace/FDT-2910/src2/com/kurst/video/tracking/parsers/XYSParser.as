/********************************************************************************************************************************************************************************
 * 
 * Class Name  	: 
 * Version 	  	: 
 * Description 	: 
 * 
 ********************************************************************************************************************************************************************************
 * 
 * Author 		: Karim Beyrouti
 * Date 			: 
 * 
 ********************************************************************************************************************************************************************************
 * 
 * METHODS
 * 
 *
 * PROPERTIES
 * 
 *
 * EVENTS
 * 
 * 
 ********************************************************************************************************************************************************************************
 * 				:
 *
 *
 *********************************************************************************************************************************************************************************
 * NOTES			:
 **********************************************************************************************************************************************************************************/
package com.kurst.video.tracking.parsers {
	import com.kurst.utils.StrUtils;
	import com.kurst.video.tracking.data.tracking.TrackFrames;
	import com.kurst.video.tracking.data.tracking.TrackScale;
	import com.kurst.video.tracking.data.TrackData;

	public class XYSParser {
		// ------------------------------------------------------------------------------------------------------------------------------------------------------------
		private static const FRAME_INFO_HEADER : String = 'Frame';
		private static const PARSE_XY : String = 'Xpixels';
		private static const PARSE_SCALE : String = 'Xpercent';
		// ------------------------------------------------------------------------------------------------------------------------------------------------------------
		private static var parseMode : String;

		// ------------------------------------------------------------------------------------------------------------------------------------------------------------
		// -PUBLIC-----------------------------------------------------------------------------------------------------------------------------------------------------
		// ------------------------------------------------------------------------------------------------------------------------------------------------------------
		/**
		 *  
		 * 
		 */
		public static function parse(d : String) : TrackData {
			var result : TrackData = new TrackData();
			var dLines : Array = d.split('\n');
			var row : String = '';

			var trackFrames : TrackFrames;
			var trackScale : TrackScale;
			var rFrames : Array;
			var r : int
			var headerData : Array;
			var data : Array;

			for ( var c : int = 0 ; c < dLines.length ; c++ ) {
				row = dLines[c];
				rFrames = row.split('\t');

				if ( row.indexOf(FRAME_INFO_HEADER) != -1 ) {
					// ------------------------------------------------------------
					// read / extract column headers
					// ------------------------------------------------------------

					headerData = new Array();

					for ( r = 0 ; r < rFrames.length ; r++ ) {
						var str : String = StrUtils.replaceChar(rFrames[r], ' ', '');

						if ( str != '' )
							headerData.push(str);
					}

					// ------------------------------------------------------------
					// parse mode ( scale / xy )
					// ------------------------------------------------------------

					parseMode = ( headerData.toString().indexOf(PARSE_XY) != -1 ) ? PARSE_XY : PARSE_SCALE;

					switch ( parseMode ) {
						case PARSE_XY :
							trackFrames = new TrackFrames();
							break;
						case PARSE_SCALE :
							trackScale = new TrackScale();
							break;
					}
				} else {
					if ( headerData != null ) {
						// ------------------------------------------------------------
						// read data
						// ------------------------------------------------------------

						data = new Array();

						for ( r = 0 ; r < rFrames.length ; r++ )
							if ( rFrames[r] != '' )
								data.push(rFrames[r]);

						if ( data.length == headerData.length ) {
							// check it's data by matching it to the number of fields

							switch ( parseMode ) {
								case PARSE_XY :
									trackFrames.addFrameData(data[0], data[1], data[2]);
									break;
								case PARSE_SCALE :
									trackScale.addFrameData(data[0], data[1], data[2]);
									break;
							}
						}
					}
				}
			}

			if ( trackScale != null )
				result.addTrackScaleFrames(trackScale);

			if ( trackFrames != null )
				result.addTrackPointFrames(trackFrames);

			return result;
		}
		// ------------------------------------------------------------------------------------------------------------------------------------------------------------
		// -PRIVATE----------------------------------------------------------------------------------------------------------------------------------------------------
		// ------------------------------------------------------------------------------------------------------------------------------------------------------------

		// ------------------------------------------------------------------------------------------------------------------------------------------------------------
		// -GET/SET----------------------------------------------------------------------------------------------------------------------------------------------------
		// ------------------------------------------------------------------------------------------------------------------------------------------------------------
		
		// ------------------------------------------------------------------------------------------------------------------------------------------------------------
		// -EVENT HANDLERS-------------------------------------------------------------------------------------------------------------------------------------------
		// ------------------------------------------------------------------------------------------------------------------------------------------------------------
	}
}