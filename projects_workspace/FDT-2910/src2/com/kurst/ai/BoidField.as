/********************************************************************************************************************************************************************************
 * 
 * Class Name  	: 
 * Version 	  	: 
 * Description 	: 
 * 
 ********************************************************************************************************************************************************************************
 * 
 * Author 		: Karim Beyrouti
 * Date 			: 
 * 
 ********************************************************************************************************************************************************************************
 * 
 * METHODS
 * 
 *
 * PROPERTIES
 * 
 *
 * EVENTS
 * 
 * 
 ********************************************************************************************************************************************************************************
 * 				:
 *
 *
 *********************************************************************************************************************************************************************************
 * NOTES			:
 **********************************************************************************************************************************************************************************/
package com.kurst.ai {
	import away3d.entities.Entity;

	import soulwire.ai.AwayBoid;

	import com.kurst.ai.data.BoidProp;

	public class BoidField {
		// ------------------------------------------------------------------------------------------------------------------------------------------------------------
		
		public var boids : Vector.<AwayBoid> = new Vector.<AwayBoid>();

		// ------------------------------------------------------------------------------------------------------------------------------------------------------------

		public function BoidField() {}

		// ------------------------------------------------------------------------------------------------------------------------------------------------------------
		// -PUBLIC-----------------------------------------------------------------------------------------------------------------------------------------------------
		// ------------------------------------------------------------------------------------------------------------------------------------------------------------
		
		/**
		 *  
		 * 
		 * @param
		 * @return
		 */
		public function createField(count : int, renderData : Entity, props : BoidProp = null) : void {
			
			for ( var c : int = 0 ; c < count ;c++ ) {
				createBoid(renderData, props);
			}
			
		}
		/**
		 *  
		 * 
		 * @param
		 * @return
		 */
		public function createBoid(renderData : Entity, props : BoidProp = null) : void {
			
			props = ( props == null ) ? new BoidProp() : props;

			var awayBoid : AwayBoid = new AwayBoid();
				awayBoid.setRenderData(renderData, props.radius);
			setProperties(awayBoid, props);

			boids.push(awayBoid);
			
		}
		/**
		 *  
		 * 
		 * @param
		 * @return
		 */
		public function update() : void {
			
			for ( var c : int = 0 ; c < boids.length ; c++ ) {
				
				updateBoid(boids[c], c);
				
			}
			
		}

		// ------------------------------------------------------------------------------------------------------------------------------------------------------------
		// -PROTECTED----------------------------------------------------------------------------------------------------------------------------------------------------
		// ------------------------------------------------------------------------------------------------------------------------------------------------------------
		
		/**
		 *  
		 * 
		 * @param
		 * @return
		 */
		protected function updateBoid(boid : AwayBoid, index : int) : void {
			// Override
		}

		// ------------------------------------------------------------------------------------------------------------------------------------------------------------
		// -PRIVATE----------------------------------------------------------------------------------------------------------------------------------------------------
		// ------------------------------------------------------------------------------------------------------------------------------------------------------------
		
		/**
		 *  
		 * 
		 * @param
		 * @return
		 */
		protected function setProperties(boid : AwayBoid, props : BoidProp) : void {
			
			boid.edgeBehavior 	= props.edgeBehavior;
			boid.maxForce 		= random(props.minForce, props.maxForce);
			boid.maxSpeed 		= random(props.minSpeed, props.maxSpeed);
			boid.wanderDistance = random(props.minWanderDistance, props.maxWanderDistance);
			boid.wanderRadius 	= random(props.minWanderRadius, props.maxWanderRadius);
			boid.wanderStep 	= random(props.minWanderStep, props.maxWanderStep);
			boid.boundsRadius 	= props.boundsRadius;
			boid.boundsCentre 	= props.boundsCentre;
			boid.renderData.x 	= boid.x = props.initPos.x;
			boid.renderData.y 	= boid.y = props.initPos.y;
			boid.renderData.z 	= boid.z = props.initPos.z;
			
			boid.velocity.incrementBy(props.velocity);
			
		}
		/**
		 *  
		 * 
		 * @param
		 * @return
		 */
		private function random(min : Number, max : Number = NaN) : Number {
			
			if ( isNaN(max) ) {
				max = min;
				min = 0;
			}

			return Math.random() * ( max - min ) + min;
		}
		
		// ------------------------------------------------------------------------------------------------------------------------------------------------------------
		// -GET/SET----------------------------------------------------------------------------------------------------------------------------------------------------
		// ------------------------------------------------------------------------------------------------------------------------------------------------------------
		
		// ------------------------------------------------------------------------------------------------------------------------------------------------------------
		// -EVENT HANDLERS-------------------------------------------------------------------------------------------------------------------------------------------
		// ------------------------------------------------------------------------------------------------------------------------------------------------------------
	}
}